[{"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\index.tsx":"1","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\reportWebVitals.ts":"2","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s1-main\\App.tsx":"3","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\store.ts":"4","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\HW1.tsx":"5","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\loadingReducer.ts":"6","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw12\\bll\\themeReducer.ts":"7","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\message\\Message.tsx":"8","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\message-sender\\MessageSender.tsx":"9","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\friend-message\\FriendMessage.tsx":"10","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw02\\HW2.tsx":"11","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw02\\affairs\\Affairs.tsx":"12","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw02\\affairs\\affair\\Affair.tsx":"13"},{"size":730,"mtime":1681812090000,"results":"14","hashOfConfig":"15"},{"size":504,"mtime":1681812090000,"results":"16","hashOfConfig":"15"},{"size":634,"mtime":1714745004953,"results":"17","hashOfConfig":"15"},{"size":541,"mtime":1681812090000,"results":"18","hashOfConfig":"15"},{"size":4621,"mtime":1714219645501,"results":"19","hashOfConfig":"15"},{"size":458,"mtime":1681812090000,"results":"20","hashOfConfig":"15"},{"size":320,"mtime":1681812090000,"results":"21","hashOfConfig":"15"},{"size":1619,"mtime":1714157855851,"results":"22","hashOfConfig":"15"},{"size":2307,"mtime":1681812090000,"results":"23","hashOfConfig":"15"},{"size":1834,"mtime":1714160434329,"results":"24","hashOfConfig":"15"},{"size":3285,"mtime":1714816933908,"results":"25","hashOfConfig":"15"},{"size":2521,"mtime":1714745637916,"results":"26","hashOfConfig":"15"},{"size":1461,"mtime":1714746417330,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q3k5hy",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\index.tsx",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\reportWebVitals.ts",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s1-main\\App.tsx",["69"],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\store.ts",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\HW1.tsx",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw10\\bll\\loadingReducer.ts",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw12\\bll\\themeReducer.ts",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\message\\Message.tsx",["70","71","72"],[],"import React from 'react'\nimport s from './Message.module.css'\nimport {MessagePartPropsType, MessageType} from \"../HW1\";\nimport avatar from \"../avatar.png\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: MessageType\n}\n\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={'hw1-avatar-' + props.message.id}\n                    // создаёт студент\n                    src={props.message.user.avatar}\n                    //\n                />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\message-sender\\MessageSender.tsx",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw01\\friend-message\\FriendMessage.tsx",["73"],[],"import React from 'react'\nimport s from './FriendMessage.module.css'\nimport {MessageType} from \"../HW1\";\n\n// создать тип вместо any и отобразить приходящие данные\n\nexport type FriendMessagePropsType = {\n    message: MessageType\n}\nconst FriendMessage = (props: FriendMessagePropsType) => {\n    return (\n        <div\n            id={'hw1-friend-message-' + props.message.id}\n            className={s.friendMessage}\n        >\n            <div className={s.friendImageAndText}>\n                <img\n                    id={'hw1-friend-avatar-' + props.message.id}\n                    // создаёт студент\n                    src={props.message.user.avatar}\n                    //\n                />\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + props.message.id}\n                        className={s.friendName}\n                    >\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + props.message.id}\n                        className={s.friendMessageText}\n                    >\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n            </div>\n            <div\n                id={'hw1-friend-time-' + props.message.id}\n                className={s.friendTime}\n            >\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendMessage\n","C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw02\\HW2.tsx",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw02\\affairs\\Affairs.tsx",[],[],"C:\\Users\\user\\Desktop\\Incubator\\HOMEWORK\\Tuesday\\hws2-master\\src\\s2-homeworks\\hw02\\affairs\\affair\\Affair.tsx",[],[],{"ruleId":"74","severity":1,"message":"75","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":11},{"ruleId":"74","severity":1,"message":"78","line":3,"column":9,"nodeType":"76","messageId":"77","endLine":3,"endColumn":29},{"ruleId":"74","severity":1,"message":"79","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":17,"column":17,"nodeType":"82","endLine":22,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":17,"column":17,"nodeType":"82","endLine":22,"endColumn":19},"@typescript-eslint/no-unused-vars","'HW1' is defined but never used.","Identifier","unusedVar","'MessagePartPropsType' is defined but never used.","'avatar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]