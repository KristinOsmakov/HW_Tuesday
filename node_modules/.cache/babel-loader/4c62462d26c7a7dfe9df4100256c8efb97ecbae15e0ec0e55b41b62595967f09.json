{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{message0}from'../HW1';import s from'./MessageSender.module.css';// компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const MessageSender=props=>{const M=props.M;const textareaRef=useRef(null);const[messages,setMessages]=useState([]);const[text,setText]=useState('');const onChange=e=>{setText(e.currentTarget.value);};useEffect(()=>{if(textareaRef!==null&&textareaRef!==void 0&&textareaRef.current){textareaRef.current.style.height='0px';textareaRef.current.style.height=textareaRef.current.scrollHeight+'px';}},[text]);const addMessage=()=>{setMessages([...messages,{id:messages.length?messages.length+1:1,user:message0.user,message:{text,time:new Date().toTimeString().slice(0,5)}}]);setTimeout(()=>setText(''),4);};const onKeyDown=e=>{e.key==='Enter'&&e.shiftKey&&addMessage();};return/*#__PURE__*/_jsxs(_Fragment,{children:[messages.map(m=>/*#__PURE__*/_jsx(M,{message:m},'message'+m.id)),/*#__PURE__*/_jsxs(\"div\",{id:'hw1-send-message-form',className:s.sendForm,children:[/*#__PURE__*/_jsx(\"textarea\",{id:'hw1-textarea',className:s.textarea,ref:textareaRef,title:'Shift+Enter for send',placeholder:'Type your message',value:text,onChange:onChange,onKeyDown:onKeyDown}),/*#__PURE__*/_jsx(\"button\",{id:'hw1-button',className:s.button,onClick:addMessage,children:\"Send\"})]})]});};export default MessageSender;","map":{"version":3,"names":["React","useEffect","useRef","useState","message0","s","MessageSender","props","M","textareaRef","messages","setMessages","text","setText","onChange","e","currentTarget","value","current","style","height","scrollHeight","addMessage","id","length","user","message","time","Date","toTimeString","slice","setTimeout","onKeyDown","key","shiftKey","map","m","sendForm","textarea","button"],"sources":["C:/Users/user/Desktop/Incubator/HOMEWORK/Tuesday/hws2-master/src/s2-homeworks/hw01/message-sender/MessageSender.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport { message0 } from '../HW1'\nimport s from './MessageSender.module.css'\n\n// компонента, которая тестирует вашу компоненту (не изменять, any не трогать)\nconst MessageSender = (props: any) => {\n    const M = props.M\n    const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n    const [messages, setMessages] = useState<any[]>([])\n    const [text, setText] = useState<any>('')\n\n    const onChange = (e: any) => {\n        setText(e.currentTarget.value)\n    }\n\n    useEffect(() => {\n        if (textareaRef?.current) {\n            textareaRef.current.style.height = '0px'\n            textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px'\n        }\n    }, [text])\n\n    const addMessage = () => {\n        setMessages([\n            ...messages,\n            {\n                id: messages.length ? messages.length + 1 : 1,\n                user: message0.user,\n                message: {\n                    text,\n                    time: new Date().toTimeString().slice(0, 5),\n                },\n            },\n        ])\n        setTimeout(() => setText(''), 4)\n    }\n\n    const onKeyDown = (e: any) => {\n        e.key === 'Enter' && e.shiftKey && addMessage()\n    }\n\n    return (\n        <>\n            {messages.map((m) => (\n                <M key={'message' + m.id} message={m} />\n            ))}\n\n            <div id={'hw1-send-message-form'} className={s.sendForm}>\n                <textarea\n                    id={'hw1-textarea'}\n                    className={s.textarea}\n                    ref={textareaRef}\n\n                    title={'Shift+Enter for send'}\n                    placeholder={'Type your message'}\n                    value={text}\n\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                />\n                <button\n                    id={'hw1-button'}\n                    className={s.button}\n\n                    onClick={addMessage}\n                >\n                    {/*текст кнопки могут изменить студенты*/}\n                    Send\n                    {/**/}\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default MessageSender\n"],"mappings":"AAAA,MAAOA,MAAK,EAAGC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAO,OAAO,CACxD,OAASC,QAAQ,KAAQ,QAAQ,CACjC,MAAOC,EAAC,KAAM,4BAA4B,CAE1C;AAAA,6IACA,KAAMC,cAAa,CAAIC,KAAU,EAAK,CAClC,KAAMC,EAAC,CAAGD,KAAK,CAACC,CAAC,CACjB,KAAMC,YAAW,CAAGP,MAAM,CAA6B,IAAI,CAAC,CAC5D,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAQ,EAAE,CAAC,CACnD,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAM,EAAE,CAAC,CAEzC,KAAMW,SAAQ,CAAIC,CAAM,EAAK,CACzBF,OAAO,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC,CAClC,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACZ,GAAIQ,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAES,OAAO,CAAE,CACtBT,WAAW,CAACS,OAAO,CAACC,KAAK,CAACC,MAAM,CAAG,KAAK,CACxCX,WAAW,CAACS,OAAO,CAACC,KAAK,CAACC,MAAM,CAAGX,WAAW,CAACS,OAAO,CAACG,YAAY,CAAG,IAAI,CAC9E,CACJ,CAAC,CAAE,CAACT,IAAI,CAAC,CAAC,CAEV,KAAMU,WAAU,CAAG,IAAM,CACrBX,WAAW,CAAC,CACR,GAAGD,QAAQ,CACX,CACIa,EAAE,CAAEb,QAAQ,CAACc,MAAM,CAAGd,QAAQ,CAACc,MAAM,CAAG,CAAC,CAAG,CAAC,CAC7CC,IAAI,CAAErB,QAAQ,CAACqB,IAAI,CACnBC,OAAO,CAAE,CACLd,IAAI,CACJe,IAAI,CAAE,GAAIC,KAAI,EAAE,CAACC,YAAY,EAAE,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAC9C,CACJ,CAAC,CACJ,CAAC,CACFC,UAAU,CAAC,IAAMlB,OAAO,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CAED,KAAMmB,UAAS,CAAIjB,CAAM,EAAK,CAC1BA,CAAC,CAACkB,GAAG,GAAK,OAAO,EAAIlB,CAAC,CAACmB,QAAQ,EAAIZ,UAAU,EAAE,CACnD,CAAC,CAED,mBACI,2BACKZ,QAAQ,CAACyB,GAAG,CAAEC,CAAC,eACZ,KAAC,CAAC,EAAwB,OAAO,CAAEA,CAAE,EAA7B,SAAS,CAAGA,CAAC,CAACb,EAAE,CAC3B,CAAC,cAEF,aAAK,EAAE,CAAE,uBAAwB,CAAC,SAAS,CAAElB,CAAC,CAACgC,QAAS,wBACpD,iBACI,EAAE,CAAE,cAAe,CACnB,SAAS,CAAEhC,CAAC,CAACiC,QAAS,CACtB,GAAG,CAAE7B,WAAY,CAEjB,KAAK,CAAE,sBAAuB,CAC9B,WAAW,CAAE,mBAAoB,CACjC,KAAK,CAAEG,IAAK,CAEZ,QAAQ,CAAEE,QAAS,CACnB,SAAS,CAAEkB,SAAU,EACvB,cACF,eACI,EAAE,CAAE,YAAa,CACjB,SAAS,CAAE3B,CAAC,CAACkC,MAAO,CAEpB,OAAO,CAAEjB,UAAW,kBAKf,GACP,GACP,CAEX,CAAC,CAED,cAAehB,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}